TODO. Tree 树的分类
- N-Ary Tree           N叉任意树
- K-d Tree             K维空间分割的数据结构
- Quad Tree            四叉树(固定有4个子节点的树)
- Binary Tree          二叉树
- Binary Search Tree   二叉搜索树
    - Balanced BST     保证树的高度最低
    - Unbalanced BST   左右子树不平衡
- Red–black Tree       红黑树，平衡树(只保证黑色结点平衡)/ TreeMap的实现
- Segment Tree         片段树/Binary Indexed Tree二叉索引树
- Decision Tree        决策树(机器学习中的判断数)
- Prefix Tree          前缀树(使用26个特征字母节点的树) N叉任意树
- B-Tree              树的单个结点存储多个数据，降低树的高度
- B+Tree              索引底层数据结构

TODO: Binary Tree 四大遍历方式
1. DFS(Depth first search) 深度优先遍历
   - 递归遍历
   - Stack: preOrder前序, inOrder中序, postOrder后续

2. BFS(Breadth First Search) 广度优先遍历
   - 层次迭代(DummyHead辅助)
   - Queue & Deque：一层一层的入队和出队

3. BBFS(Bidirectional BFS) 双向广度优先遍历
   从顶向下和从底向上同时遍历，如果在同一个Level层面有交集则是联通的

4. Morris Traversal
   非递归, 非Stack, 最佳复杂度 O(n) O(1)
   https://leetcode.com/problems/binary-tree-postorder-traversal/discuss/45648/three-ways-of-iterative-postorder-traversing-easy-explanation
