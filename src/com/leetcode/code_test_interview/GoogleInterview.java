package com.leetcode.code_test_interview;

// Google 工程师岗测试题目：
// 1. 至少保证有一门语言不被问倒
// 2. Coding的速度和code的整洁性 !!
// 3. 三轮算法(必须在45分钟内) + 一个系统设计 + 一个behavioral行为态度
// 4. 不是只追求做对题目的“机器” + 扎实的基本功 + 优秀的思维能力 + 出众的沟通能力

// Google 文档共享, 白板写代码
// https://hangouts.google.com/ 在线视频连接
// https://www.hackerrank.com/interview/interview-preparation-kit

// Coding： 用熟悉的编程语言(不限)实现给定的题目，会重点关注解题目过程中的"理解"和"沟通能力";
// 算法：    TODO: 排序/搜索/分治/动态规划/递归，贪婪算法, Dijkstra, A*搜索算法
// 数据结构: 每种数据结构的使用场景
// 复杂度:   理解和分析算法的复杂度
// 排序：    常见的排序算法，时间/空间复杂度，例如 快排/归并/堆排序/插入/基数排序等等;
// 数据结构： 数组/链表/堆/栈/hash/树/二叉树等;
// 数学：    可能会涉及到离散数学，组合数学，例如N个中选k个的方法等;
// 图：      图的表达(例如矩阵/邻接表)，bfs/dfs等;
// 递归：    递归和迭代的转换;
// 其他：    系统设计和操作系统等;
public class GoogleInterview {

    // 有一个n*n的棋盘，上面有m个糖果，最开始有一个人在棋盘左上角，他可以向左向右或者向下移动，但不能向上移动，
    // 问他最少需要多少步吃完所有糖果
    // ? 0 0 0   由于不能倒退，则必须保证每一行的必须吃完之后，才下降到下一行中
    // 0 0 1 0   进入下一行的时候，需要去找这一行有糖果的边界位置的的其中一个最近的位置
    // 1 0 0 1   在一行中横向移动
    // 0 1 0 0   直到结束...
    public int countSteps(int[][] nums, int m) {

        return 0;
    }
}
