LinkedList<E>链表的特点
1. 数据查询比较慢
2. 增删中间节点的速度很快(通过节点指向快速找到下一个存储地址)
3. 非线程安全的，多线程需要设置同步锁
   List list = Collections.synchronizedList(new LinkedList(...));

LinkedList链表的三种类型
   单向链表(Single Linked List)
   双向链表(Doubly Linked List) 实现list和deque
   循环链表(Cycle Linked List)
- 每一个元素(节点node)都存储当前的值 + 下一个元素的地址
- 增加的时候, 只需要改变前节点存储的地址和新节点的地址(指向下一个元素的地址)
- 删除的时候, 将要删除的节点的前后节点链接起来

TODO: LinkedList方法论
1. 两种常规解法：迭代法 & 递归法(简单直接)
2. 直接判断当前node结点是否为null，而非node.next
3. 构建dummyHead作用head的前面结点，作为保留