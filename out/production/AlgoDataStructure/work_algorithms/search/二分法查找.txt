TODO. 二分法的本质(优先考虑的问题) 三种不同模板Templates
从一堆有序的数据中找到指定数据，不需遍历所有值，时间复杂度为O(log(n))
从一堆无序的数据中找到指定数据，必须在二分位计算后能够判断前后移动方向
从一堆拼接好的排序堆片段数据进行二分法查找 O(2log(n)) = O(log(n))

二分法除了用于查找，还能用于实时计算最后的结果，直接计算"二分点的两侧"
二分法不只作用在元素位置上面，同样可以作用在总值范围 & 距离差值(方法最终要返回的结果)
二分法不一定将找到的median值返回，而在二分全部结束后再返回结果(优化结果的边界值)

Java 二分法实现, 找到元素的插入位置
Arrays.binarySearch(array, item) / Collections.binarySearch(list, item)
// 如果找到则返回index的位置
// 没有找到则返回负值 (-(insertion point) - 1)
// 恢复插入的位置 index = -(index + 1)
